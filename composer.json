{
    "name": "openeuropa/oe_list_pages",
    "description": "OpenEuropa List Pages.",
    "type": "drupal-module",
    "license": "EUPL-1.2",
    "minimum-stability": "dev",
    "prefer-stable": true,
    "require": {
        "php": ">=8.0",
        "drupal/core": "^9.4",
        "drupal/emr": "^1.1",
        "drupal/facets": "^3.0@beta",
        "drupal/multivalue_form_element": "^1.0@beta",
        "drupal/search_api": "^1.27",
        "symfony/options-resolver": "^4.4.30"
    },
    "require-dev": {
        "behat/mink-selenium2-driver": "^1.5",
        "composer/installers": "^1.11",
        "drupal/address": "^1.8",
        "drupal/config_devel": "^1.2",
        "drupal/core-composer-scaffold": "^9.4",
        "drupal/ctools": "^3.7",
        "drupal/drupal-extension": "dev-master as 4.0",
        "drupal/extra_field": "^2.1",
        "drupal/inline_entity_form": "^1.0-rc12",
        "drupal/token": "^1.10",
        "drush/drush": "^11.1",
        "guzzlehttp/guzzle": "^7.0",
        "masterminds/html5": "^2.7.6",
        "mikey179/vfsstream": "^1.6.10",
        "openeuropa/code-review": "^2.0",
        "openeuropa/oe_link_lists": "^0.19",
        "openeuropa/oe_multilingual": "^1.12",
        "openeuropa/open_vocabularies": "dev-master",
        "openeuropa/task-runner-drupal-project-symlink": "^1.0.0-beta5",
        "phpspec/prophecy-phpunit": "^2",
        "symfony/console": "^4.4.30",
        "symfony/css-selector": "^4.4.44",
        "symfony/dom-crawler": "^4.4.44",
        "symfony/finder": "^4.4.30",
        "symfony/http-foundation": "^4.4.30",
        "symfony/phpunit-bridge": "^6.0",
        "symfony/process": "^4.4.30",
        "symfony/routing": "^4.4.44",
        "symfony/validator": "^4.4.35",
        "symfony/yaml": "^4.4.29"
    },
    "scripts": {
        "post-install-cmd": "./vendor/bin/run drupal:site-setup",
        "post-update-cmd": "./vendor/bin/run drupal:site-setup"
    },
    "repositories": {
        "drupal": {
            "type": "composer",
            "url": "https://packages.drupal.org/8"
        }
    },
    "autoload": {
        "psr-4": {
            "Drupal\\oe_list_pages\\": "./src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Drupal\\Tests\\oe_list_pages\\": "./tests/src",
            "Drupal\\Tests\\oe_link_lists\\": "./build/modules/contrib/oe_link_lists/tests/src",
            "Drupal\\Tests\\oe_list_pages_link_list_source\\": "./modules/oe_list_pages_link_list_source/tests/src"
        }
    },
    "extra": {
        "composer-exit-on-patch-failure": true,
        "enable-patching": true,
        "installer-paths": {
            "build/core": ["type:drupal-core"],
            "build/profiles/contrib/{$name}": ["type:drupal-profile"],
            "build/modules/contrib/{$name}": ["type:drupal-module"],
            "build/themes/contrib/{$name}": ["type:drupal-theme"]
        },
        "patches": {},
        "drupal-scaffold": {
            "locations": {
                "web-root": "./build"
            }
        },
        "_readme": [
            "Explicit minimum version requirement of drupal/ctools due to previous versions having the 'core' key set in .info.yml files.",
            "Explicit requirement of token module due to lower versions declaring optional parameters before the require one on token_tokens() function.",
            "Explicit minimum version requirement of mikey179/vfsstream due to lower versions missing return type on vfsStreamDirectory::getIterator() method.",
            "Use master branch of drupal/drupal-extension to replace fabpot/goutte with behat/mink-browserkit-driver.",
            "Explicit minimum version requirement of symfony/phpunit-bridge to replace drupal/core-dev testing classes and traits.",
            "Explicit minimum version requirement of guzzlehttp/guzzle due to lower versions missing return type on CookieJar::getIterator() and CookieJar::count() methods.",
            "Explicit minimum version requirement of symfony packages due to lower versions missing return type on various methods being incompatible with PHP 8.1 parent methods.",
            "Explicit minimum version requirement of masterminds/html5 due to lower versions passing NULL parameters instead of string when calling DOMImplementation::createDocument() method.",
            "Explicit minimum version requirement of drupal/facets due to lower versions throwing PHP deprecation warnings."
        ]
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "composer/installers": true,
            "cweagans/composer-patches": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "drupal/core-composer-scaffold": true,
            "phpro/grumphp": true
        },
        "github-oauth": {

        }
    }
}
